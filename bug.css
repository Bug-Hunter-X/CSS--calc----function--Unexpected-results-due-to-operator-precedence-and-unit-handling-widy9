The CSS `calc()` function can produce unexpected results if you're not careful with operator precedence and unit handling.  For example, consider this code:

```css
.element {
  width: calc(50% - 10px);
}
```

This seems straightforward, but if the parent element's width is less than 20px, the result will be a negative width, which the browser will likely interpret as 0. This can lead to unexpected layout issues.

Another common mistake involves mixing units inconsistently.  For instance:

```css
.element {
  width: calc(100px + 50%);
}
```

This is valid CSS, but it may not behave as expected. The `100px` and `50%` are added directly, causing a potential miscalculation.  You should ensure consistency in units within `calc()` for better predictability.